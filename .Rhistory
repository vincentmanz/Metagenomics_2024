install.packages("dplyr")
#2.1. Cleaning data
install.packages(c("janitor","outliers","missForest","frequency","Amelia","diffobj",
"mice","VIM","Bioconductor","mi","wrangle", "mitools"), dependencies = TRUE)
#2.1. Cleaning data
install.packages(c("janitor","outliers","missForest","frequency","Amelia","diffobj",
"mice","VIM","Bioconductor","mi","wrangle", "mitools"), dependencies = TRUE)
install.packages("ggmap")
#2.1. Cleaning data
install.packages(c("janitor","outliers","missForest","frequency","Amelia","diffobj",
"mice","VIM","Bioconductor","mi","wrangle", "mitools"), dependencies = TRUE)
#2.2. Dealing with R data types and formats
install.packages(c("stringr","lubridate","glue","scales","hablar","readr"), dependencies = TRUE)
#2.3. Sub-seting and aggregating data
install.packages(c("dplyr","tidyverse","purr","magrittr","data.table","plyr","tidyr","tibble","reshape2"), dependencies = TRUE)
reshape(df, idvar = "marker", timevar = "value", direction = "wide")
# Creating the data frame
df <- data.frame(
sample_type = rep(c("merged", "single-end"), each = 50),
marker = rep(c("12S", "16S", "COII", "GPI", "ITS2", "ND1", "MINEX"), times = 14),
value = c(0, 15, 0, 0, 2, 0, 3, 6, 18, 12, 0, 0, 2, 0, 0, 0, 0, 9, 0, 1, 2, 0, 0, 0, 11, 0, 0, 0, 3, 0, 0, 0,
1, 6, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 19, 15, 0, 0, 2, 0, 16, 16, 0, 0, 2, 0, 14, 0, 10, 2, 15, 0, 6, 12,
0, 0, 0, 14, 4, 8, 0, 0, 0, 5, 0, 8, 0, 0, 30, 0, 0, 0, 11, 14, 0, 2, 0, 0, 2, 6, 2, 10, 3, 0, 14, 0, 11,
0, 6, 12, 15, 0, 0, 0, 2, 0, 4, 0, 15, 0, 13, 20, 0, 2, 0, 0, 29, 15, 0, 2, 0, 0, 1, 17, 0, 2, 0, 0, 1, 34,
0, 4, 11, 0, 10, 26, 0, 1, 11, 0, 13, 24, 0, 3, 2, 0, 37, 14, 0, 2)
)
# Creating the data frame
df <- data.frame(
sample_type = rep(c("merged", "single-end"), each = 50),
marker = rep(c("12S", "16S", "COII", "GPI", "ITS2", "ND1", "MINEX"), times = 14),
value = c(0, 15, 0, 0, 2, 0, 3, 6, 18, 12, 0, 0, 2, 0, 0, 0, 0, 9, 0, 1, 2, 0, 0, 0, 11, 0, 0, 0, 3, 0, 0, 0,
1, 6, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 19, 15, 0, 0, 2, 0, 16, 16, 0, 0, 2, 0, 14, 0, 10, 2, 15, 0, 6, 12,
0, 0, 0, 14, 4, 8, 0, 0, 0, 5, 0, 8, 0, 0, 30, 0, 0, 0, 11, 14, 0, 2, 0, 0, 2, 6, 2, 10, 3, 0, 14, 0, 11,
0, 6, 12, 15, 0, 0, 0, 2, 0, 4, 0, 15, 0, 13, 20, 0, 2, 0, 0, 29, 15, 0, 2, 0, 0, 1, 17, 0, 2, 0, 0, 1, 34,
0, 4, 11, 0, 10, 26, 0, 1, 11, 0, 13, 24, 0, 3, 2, 0, 37, 14, 0, 2)
)
df <- data.frame(
sample_type = rep(c("merged", "single-end"), each = 50),
marker = rep(c("12S", "16S", "COII", "GPI", "ITS2", "ND1", "MINEX"), times = 14),
value = c(0, 15, 0, 0, 2, 0, 3, 6, 18, 12, 0, 0, 2, 0, 0, 0, 0, 9, 0, 1, 2, 0, 0, 0, 11, 0, 0, 0, 3, 0, 0, 0,
1, 6, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 19, 15, 0, 0, 2, 0, 16, 16, 0, 0, 2, 0, 14, 0, 10, 2, 15, 0, 6, 12,
0, 0, 0, 14, 4, 8, 0, 0, 0, 5, 0, 8, 0, 0, 30, 0, 0, 0, 11, 14, 0, 2, 0, 0, 2, 6, 2, 10, 3, 0, 14, 0, 11,
0, 6, 12, 15, 0, 0, 0, 2, 0, 4, 0, 15, 0, 13, 20, 0, 2, 0, 0, 29, 15, 0, 2, 0, 0, 1, 17, 0, 2, 0, 0, 1, 34,
0, 4, 11, 0, 10, 26, 0, 1, 11, 0, 13, 24, 0, 3, 2, 0, 37, 14, 0, 2, rep(0, 48))
)
0, 0, 26, 0, 0, 0, 1, 11, 0, 0, 2, 0, 0, 0, 1, 13, 0, 0, 24, 0, 0, 0, 37, 14, 0, 0, 2, 0, 0, 0)
df <- data.frame(
sample_type = rep(c("merged", "merged","merged","merged","merged","merged","merged","single-end"), each = 33),
marker = rep(c("12S", "16S", "COII", "GPI", "ITS2", "ND1", "MINEX", "MINEX"), times = 33),
value = c(0, 15, 0, 0, 2, 0, 3, 6, 18, 12, 0, 0, 2, 0, 0, 0, 0, 9, 0, 1, 2, 0, 0, 12, 0, 11, 0, 0, 3, 0, 0, 0, 1, 6, 0, 0, 2, 0, 0, 0, 0, 11, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 19, 0, 0, 2, 0, 0, 0, 0, 15, 0, 0, 2, 0, 0, 0, 16, 16, 0, 0, 2, 0, 0, 0, 0, 16, 0, 0, 2, 0, 0, 0, 14, 10, 2, 1, 2, 4, 0, 24, 4, 8, 0, 0, 4, 0, 0, 5, 0, 8, 0, 0, 30, 0, 0, 0, 0, 14, 0, 0, 2, 0, 0, 0, 2, 6, 2, 1, 10, 3, 0, 14, 0, 11, 0, 0, 2, 0, 0, 0, 6, 12, 0, 0, 15, 0, 0, 0, 1, 14, 4, 2, 10, 0, 0, 3, 2, 1, 0, 0, 4, 0, 0, 0, 0, 15, 0, 0, 14, 0, 0, 0, 11, 8, 2, 2, 4, 0, 0, 5, 1, 7, 2, 1, 5, 0, 5, 15, 13, 20, 0, 0, 2, 0, 0, 0, 29, 15, 0, 0, 2, 0, 0, 0, 1, 17, 0, 0, 2, 0, 0, 0, 1, 34, 0, 0, 2, 0, 0, 0, 1, 12, 0, 0, 4, 0, 0, 0, 4, 11, 0, 0, 2, 0, 0, 0, 0, 10, 0, 0, 26, 0, 0, 0, 1, 11, 0, 0, 2, 0, 0, 0, 1, 13, 0, 0, 24, 0, 0, 0, 37, 14, 0, 0, 2, 0, 0, 0)
)
print(df)
reshape(df, idvar = "marker", timevar = "value", direction = "wide")
)
)
df <- data.frame(
#Smple_type = rep(c("merged", "merged","merged","merged","merged","merged","merged","single-end"), each = 33),
marker = rep(c("12S", "16S", "COII", "GPI", "ITS2", "ND1", "MINEX", "MINEX_R1 times = 33),
value = c(0, 15, 0, 0, 2, 0, 3, 6, 18, 12, 0, 0, 2, 0, 0, 0, 0, 9, 0, 1, 2, 0, 0, 12, 0, 11, 0, 0, 3, 0, 0, 0, 1, 6, 0, 0, 2, 0, 0, 0, 0, 11, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 19, 0, 0, 2, 0, 0, 0, 0, 15, 0, 0, 2, 0, 0, 0, 16, 16, 0, 0, 2, 0, 0, 0, 0, 16, 0, 0, 2, 0, 0, 0, 14, 10, 2, 1, 2, 4, 0, 24, 4, 8, 0, 0, 4, 0, 0, 5, 0, 8, 0, 0, 30, 0, 0, 0, 0, 14, 0, 0, 2, 0, 0, 0, 2, 6, 2, 1, 10, 3, 0, 14, 0, 11, 0, 0, 2, 0, 0, 0, 6, 12, 0, 0, 15, 0, 0, 0, 1, 14, 4, 2, 10, 0, 0, 3, 2, 1, 0, 0, 4, 0, 0, 0, 0, 15, 0, 0, 14, 0, 0, 0, 11, 8, 2, 2, 4, 0, 0, 5, 1, 7, 2, 1, 5, 0, 5, 15, 13, 20, 0, 0, 2, 0, 0, 0, 29, 15, 0, 0, 2, 0, 0, 0, 1, 17, 0, 0, 2, 0, 0, 0, 1, 34, 0, 0, 2, 0, 0, 0, 1, 12, 0, 0, 4, 0, 0, 0, 4, 11, 0, 0, 2, 0, 0, 0, 0, 10, 0, 0, 26, 0, 0, 0, 1, 11, 0, 0, 2, 0, 0, 0, 1, 13, 0, 0, 24, 0, 0, 0, 37, 14, 0, 0, 2, 0, 0, 0)
)
print(df)
)
df <- data.frame(
#Smple_type = rep(c("merged", "merged","merged","merged","merged","merged","merged","single-end"), each = 33),
marker = rep(c("12S", "16S", "COII", "GPI", "ITS2", "ND1", "MINEX", "MINEX_R1 times = 33),
value = c(0, 15, 0, 0, 2, 0, 3, 6, 18, 12, 0, 0, 2, 0, 0, 0, 0, 9, 0, 1, 2, 0, 0, 12, 0, 11, 0, 0, 3, 0, 0, 0, 1, 6, 0, 0, 2, 0, 0, 0, 0, 11, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 19, 0, 0, 2, 0, 0, 0, 0, 15, 0, 0, 2, 0, 0, 0, 16, 16, 0, 0, 2, 0, 0, 0, 0, 16, 0, 0, 2, 0, 0, 0, 14, 10, 2, 1, 2, 4, 0, 24, 4, 8, 0, 0, 4, 0, 0, 5, 0, 8, 0, 0, 30, 0, 0, 0, 0, 14, 0, 0, 2, 0, 0, 0, 2, 6, 2, 1, 10, 3, 0, 14, 0, 11, 0, 0, 2, 0, 0, 0, 6, 12, 0, 0, 15, 0, 0, 0, 1, 14, 4, 2, 10, 0, 0, 3, 2, 1, 0, 0, 4, 0, 0, 0, 0, 15, 0, 0, 14, 0, 0, 0, 11, 8, 2, 2, 4, 0, 0, 5, 1, 7, 2, 1, 5, 0, 5, 15, 13, 20, 0, 0, 2, 0, 0, 0, 29, 15, 0, 0, 2, 0, 0, 0, 1, 17, 0, 0, 2, 0, 0, 0, 1, 34, 0, 0, 2, 0, 0, 0, 1, 12, 0, 0, 4, 0, 0, 0, 4, 11, 0, 0, 2, 0, 0, 0, 0, 10, 0, 0, 26, 0, 0, 0, 1, 11, 0, 0, 2, 0, 0, 0, 1, 13, 0, 0, 24, 0, 0, 0, 37, 14, 0, 0, 2, 0, 0, 0)
)
)
df <- data.frame(
#Smple_type = rep(c("merged", "merged","merged","merged","merged","merged","merged","single-end"), each = 33),
marker = rep(c("12S", "16S", "COII", "GPI", "ITS2", "ND1", "MINEX", "MINEX_R1 times = 33),
value = c(0, 15, 0, 0, 2, 0, 3, 6, 18, 12, 0, 0, 2, 0, 0, 0, 0, 9, 0, 1, 2, 0, 0, 12, 0, 11, 0, 0, 3, 0, 0, 0, 1, 6, 0, 0, 2, 0, 0, 0, 0, 11, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 19, 0, 0, 2, 0, 0, 0, 0, 15, 0, 0, 2, 0, 0, 0, 16, 16, 0, 0, 2, 0, 0, 0, 0, 16, 0, 0, 2, 0, 0, 0, 14, 10, 2, 1, 2, 4, 0, 24, 4, 8, 0, 0, 4, 0, 0, 5, 0, 8, 0, 0, 30, 0, 0, 0, 0, 14, 0, 0, 2, 0, 0, 0, 2, 6, 2, 1, 10, 3, 0, 14, 0, 11, 0, 0, 2, 0, 0, 0, 6, 12, 0, 0, 15, 0, 0, 0, 1, 14, 4, 2, 10, 0, 0, 3, 2, 1, 0, 0, 4, 0, 0, 0, 0, 15, 0, 0, 14, 0, 0, 0, 11, 8, 2, 2, 4, 0, 0, 5, 1, 7, 2, 1, 5, 0, 5, 15, 13, 20, 0, 0, 2, 0, 0, 0, 29, 15, 0, 0, 2, 0, 0, 0, 1, 17, 0, 0, 2, 0, 0, 0, 1, 34, 0, 0, 2, 0, 0, 0, 1, 12, 0, 0, 4, 0, 0, 0, 4, 11, 0, 0, 2, 0, 0, 0, 0, 10, 0, 0, 26, 0, 0, 0, 1, 11, 0, 0, 2, 0, 0, 0, 1, 13, 0, 0, 24, 0, 0, 0, 37, 14, 0, 0, 2, 0, 0, 0)
)
df <- data.frame(
#Smple_type = rep(c("merged", "merged","merged","merged","merged","merged","merged","single-end"), each = 33),
marker = rep(c("12S", "16S", "COII", "GPI", "ITS2", "ND1", "MINEX", "MINEX_R1 times = 33),
value = c(0, 15, 0, 0, 2, 0, 3, 6, 18, 12, 0, 0, 2, 0, 0, 0, 0, 9, 0, 1, 2, 0, 0, 12, 0, 11, 0, 0, 3, 0, 0, 0, 1, 6, 0, 0, 2, 0, 0, 0, 0, 11, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 19, 0, 0, 2, 0, 0, 0, 0, 15, 0, 0, 2, 0, 0, 0, 16, 16, 0, 0, 2, 0, 0, 0, 0, 16, 0, 0, 2, 0, 0, 0, 14, 10, 2, 1, 2, 4, 0, 24, 4, 8, 0, 0, 4, 0, 0, 5, 0, 8, 0, 0, 30, 0, 0, 0, 0, 14, 0, 0, 2, 0, 0, 0, 2, 6, 2, 1, 10, 3, 0, 14, 0, 11, 0, 0, 2, 0, 0, 0, 6, 12, 0, 0, 15, 0, 0, 0, 1, 14, 4, 2, 10, 0, 0, 3, 2, 1, 0, 0, 4, 0, 0, 0, 0, 15, 0, 0, 14, 0, 0, 0, 11, 8, 2, 2, 4, 0, 0, 5, 1, 7, 2, 1, 5, 0, 5, 15, 13, 20, 0, 0, 2, 0, 0, 0, 29, 15, 0, 0, 2, 0, 0, 0, 1, 17, 0, 0, 2, 0, 0, 0, 1, 34, 0, 0, 2, 0, 0, 0, 1, 12, 0, 0, 4, 0, 0, 0, 4, 11, 0, 0, 2, 0, 0, 0, 0, 10, 0, 0, 26, 0, 0, 0, 1, 11, 0, 0, 2, 0, 0, 0, 1, 13, 0, 0, 24, 0, 0, 0, 37, 14, 0, 0, 2, 0, 0, 0)
)
)
))
library(metabaR)
library(igraph)
from mlxtend.plotting import heatmap
# Library
library(ggplot2)
# Dummy data
x <- LETTERS[1:20]
y <- paste0("var", seq(1,20))
data <- expand.grid(X=x, Y=y)
data$Z <- runif(400, 0, 5)
# Heatmap
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile()
# Library
library(ggplot2)
# Dummy data
x <- LETTERS[1:30]
y <- paste0("Sample", seq(1,20))
data <- expand.grid(X=x, Y=y)
data$Z <- runif(400, 0, 5)
ggplot(data, aes(X, Y, fill= Z))
# Library
library(ggplot2)
# Dummy data
x <- LETTERS[1:30]
y <- paste0("Sample", seq(1,20))
data <- expand.grid(X=x, Y=y)
data$Z <- runif(400, 0, 5)
# Library
library(ggplot2)
# Dummy data
x <- paste0(seq(1,30))
y <- paste0("Sample", seq(1,30))
data <- expand.grid(X=x, Y=y)
data$Z <- runif(400, 0, 5)
paste0(seq(1,30))
paste0("Sample", seq(1,30))
# Dummy data
x <- paste0(seq(1,30))
y <- paste0("Sample ", seq(1,30))
data <- expand.grid(X=x, Y=y)
data$Z <- runif(400, 0, 5)
runif(400, 0, 5)
data$Z <- runif(900, 0, 5)
# Heatmap
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile()
# Library
library(ggplot2)
# Dummy data
x <- paste0(seq(1,1000))
y <- paste0("Sample ", seq(1,30))
data <- expand.grid(X=x, Y=y)
data$Z <- runif(3000, 0, 5)
# Heatmap
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile()
data$Z <- runif(600, 0, 5)
# Color Brewer palette
library(viridis)
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_fill_viridis(discrete=FALSE) +
theme_ipsum()
install.packages("theme_ipsum")
library(hrbrthemes)
# Color Brewer palette
library(viridis)
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_fill_viridis(discrete=FALSE) +
theme_ipsum()
data$Z <- runif(200, 0, 5)
# Color Brewer palette
library(viridis)
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_fill_viridis(discrete=FALSE) +
theme_ipsum()
# Dummy data
x <- paste0(seq(1,30))
y <- paste0("Sample ", seq(1,30))
data <- expand.grid(X=x, Y=y)
data$Z <- runif(90, 0, 5)
# Color Brewer palette
library(viridis)
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_fill_viridis(discrete=FALSE) +
theme_ipsum()
# Dummy data
x <- paste0(seq(1,100))
y <- paste0("Sample ", seq(1,30))
data <- expand.grid(X=x, Y=y)
data$Z <- runif(300, 0, 5)
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_fill_distiller(palette = "RdPu") +
theme_ipsum()
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_colour_grey(start = 0, end = .9) +
theme_ipsum()
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_colour_grey(start = 0, end = .9)
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_colour_grey(start = 0, end = .9) + theme_bw())
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_colour_grey(start = 0, end = .9) +
theme_bw())
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_colour_grey(start = 0, end = .9) +
theme_bw()
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
#scale_colour_grey(start = 0, end = .9) +
theme_bw()
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_colour_grey()
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_fill_grey(start = 0, end = 0.5)
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_fill_grey()
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
geom_tile() +
scale_colour_grey()
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
scale_colour_grey()
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
scale_colour_grey()+
geom_tile()
# Color Brewer palette
ggplot(data, aes(X, Y, fill= Z)) +
scale_colour_grey()+
geom_tile()
set.seed(123)                                                     # Set seed for reproducibility
data <- matrix(rnorm(100, 0, 10), nrow = 10, ncol = 10)           # Create example data
colnames(data) <- paste0("col", 1:10)                             # Column names
rownames(data) <- paste0("row", 1:10)
plot_ly(z = data, colorscale = "Greys", type = "heatmap")         # Manual colors
library("plotly")
# Apply heatmap function
# Set seed for reproducibility
data <- matrix(rnorm(100, 0, 10), nrow = 10, ncol = 10)           # Create example data
colnames(data) <- paste0("col", 1:10)                             # Column names
rownames(data) <- paste0("row", 1:10)
plot_ly(z = data, colorscale = "Greys", type = "heatmap")         # Manual colors
# Apply heatmap function
# Set seed for reproducibility
data <- matrix(rnorm(100, 0, 10), nrow = 10, ncol = 10)           # Create example data
colnames(data) <- paste0("col", 1:30)                             # Column names
rownames(data) <- paste0("row", 1:100)
plot_ly(z = data, colorscale = "Greys", type = "heatmap")         # Manual colors
# Apply heatmap function
# Set seed for reproducibility
data <- matrix(rnorm(100, 0, 10), nrow = 10, ncol = 10)           # Create example data
colnames(data) <- paste0("col", 1:30)                             # Column names
# Apply heatmap function
# Set seed for reproducibility
data <- matrix(rnorm(100, 0, 10), nrow = 100, ncol = 30)           # Create example data
colnames(data) <- paste0("col", 1:30)                             # Column names
rownames(data) <- paste0("row", 1:100)
plot_ly(z = data, colorscale = "Greys", type = "heatmap")         # Manual colors
paste0("col", 1:30)
colnames(data) <- paste0("Samples ", 1:30)                             # Column names
colnames(data) <- paste0("Samples ", 1:30)                             # Column names
rownames(data) <- paste0( 1:100)
data
# Apply heatmap function
# Set seed for reproducibility
data <- matrix(rnorm(100, 0, 30), nrow = 100, ncol = 30)           # Create example data
plot_ly(z = data, colorscale = "Greys", type = "heatmap")         # Manual colors
data
x <- paste0(seq(1,30))
y <- paste0( seq(1,2000))
data <- expand.grid(X=x, Y=y)
data$Z <- runif(6000, 0, 5)
plot_ly(z = data, colorscale = "Greys", type = "heatmap")         # Manual colors
data
x <- paste0(seq(1,30))
y <- paste0( seq(1,2000))
data <- expand.grid(X=x, Y=y)
data$Z <- runif(6000, 0, 5)
data
x <- paste0(seq(1,30))
y <- paste0( seq(1,2000))
# Apply heatmap function
# Set seed for reproducibility
data <- matrix(rnorm(100, 0, 30), nrow = 100, ncol = 30)           # Create example data
colnames(data) <- paste0("Samples ", 1:30)                             # Column names
rownames(data) <- paste0( 30:100)
plot_ly(z = data, colorscale = "Greys", type = "heatmap")         # Manual colors
# Apply heatmap function
# Set seed for reproducibility
data <- matrix(rnorm(100, 0, 30), nrow = 100, ncol = 30)           # Create example data
data
plot_ly(z = data, colorscale = "Greys", type = "heatmap")         # Manual colors
library("reshape")                                                # Load reshape package
data <- matrix(rnorm(100, 0, 30), nrow = 100, ncol = 30)           # Create example data
colnames(data) <- paste0("Samples ", 1:30)                             # Column names
rownames(data) <- paste0( 1:100)
data_melt <- melt(data)                                           # Reorder data
data <- matrix(rnorm(100, 0, 30), nrow = 100, ncol = 30)           # Create example data
colnames(data) <- paste0("Samples ", 1:30)                             # Column names
rownames(data) <- paste0( 1:100)
data_melt <- melt(data)                                           # Reorder data
plot_ly(z = data, colorscale = "Greys", type = "heatmap")         # Manual colors
heatmap(data)
heatmap(data, Rowv = NA, Colv = NA)                               # Remove dendrogram
data <- matrix(rnorm(100, 0, 30), nrow = 100, ncol = 30)           # Create example data
colnames(data) <- paste0("Samples ", 1:30)                             # Column names
rownames(data) <- paste0( 1:100)
heatmap(data)
heatmap(data, Rowv = NA, Colv = NA)                               # Remove dendrogram
plot_ly(z = data_melt, colorscale = "Greys", type = "heatmap")         # Manual colors
data <- matrix(rnorm(100, 0, 30), nrow = 100, ncol = 30)           # Create example data
colnames(data) <- paste0("Samples ", 1:30)                             # Column names
rownames(data) <- paste0( 1:100)
data_melt <- melt(data)                                           # Reorder data
plot_ly(z = data_melt, colorscale = "Greys", type = "heatmap")         # Manual colors
set.seed(123)                                                     # Set seed for reproducibility
data <- matrix(rnorm(100, 0, 10), nrow = 10, ncol = 10)           # Create example data
colnames(data) <- paste0("col", 1:10)                             # Column names
rownames(data) <- paste0("row", 1:10)
heatmap(data)                                                     # Apply heatmap function
heatmap(data, Rowv = NA, Colv = NA)                               # Remove dendrogram
library("reshape")                                                # Load reshape package
data_melt <- melt(data)                                           # Reorder data
ggp <- ggplot(data_melt, aes(X1, X2)) +                           # Create heatmap with ggplot2
geom_tile(aes(fill = value))
ggp                                                               # Print heatmap
library("plotly")                                                 # Load plotly package
plot_ly(z = data, type = "heatmap")                               # Apply plot_ly function
plot_ly(z = data, colorscale = "Greys", type = "heatmap")         # Manual colors
data <- matrix(rnorm(100, 0, 10), nrow = 100, ncol = 30)           # Create example data
colnames(data) <- paste0("col", 1:30)                             # Column names
rownames(data) <- paste0("row", 1:100)
heatmap(data)                                                     # Apply heatmap function
heatmap(data, Rowv = NA, Colv = NA)                               # Remove dendrogram
library("reshape")                                                # Load reshape package
data_melt <- melt(data)                                           # Reorder data
ggp <- ggplot(data_melt, aes(X1, X2)) +                           # Create heatmap with ggplot2
geom_tile(aes(fill = value))
ggp                                                               # Print heatmap
library("plotly")                                                 # Load plotly package
plot_ly(z = data, type = "heatmap")                               # Apply plot_ly function
plot_ly(z = data, colorscale = "Greys", type = "heatmap")         # Manual colors
data <- matrix(rnorm(100, 0, 10), nrow = 30, ncol = 100)           # Create example data
colnames(data) <- paste0("col", 1:30)                             # Column names
rownames(data) <- paste0("row", 1:100)
heatmap(data)                                                     # Apply heatmap function
heatmap(data, Rowv = NA, Colv = NA)                               # Remove dendrogram
library("reshape")                                                # Load reshape package
data_melt <- melt(data)                                           # Reorder data
ggp <- ggplot(data_melt, aes(X1, X2)) +                           # Create heatmap with ggplot2
geom_tile(aes(fill = value))
ggp                                                               # Print heatmap
library("plotly")                                                 # Load plotly package
plot_ly(z = data, type = "heatmap")                               # Apply plot_ly function
plot_ly(z = data, colorscale = "Greys", type = "heatmap")         # Manual colors
data <- matrix(rnorm(100, 0, 2000), nrow = 30, ncol = 1000)           # Create example data
colnames(data) <- paste0("col", 1:30)                             # Column names
rownames(data) <- paste0("row", 1:1000)
heatmap(data)                                                     # Apply heatmap function
heatmap(data, Rowv = NA, Colv = NA)                               # Remove dendrogram
library("reshape")                                                # Load reshape package
data_melt <- melt(data)                                           # Reorder data
ggp <- ggplot(data_melt, aes(X1, X2)) +                           # Create heatmap with ggplot2
geom_tile(aes(fill = value))
ggp                                                               # Print heatmap
library("plotly")                                                 # Load plotly package
plot_ly(z = data, type = "heatmap")                               # Apply plot_ly function
plot_ly(z = data, colorscale = "Greys", type = "heatmap")         # Manual colors
setwd("~/Documents/project/Metagenomics_2024/Metagenomics_2024")
